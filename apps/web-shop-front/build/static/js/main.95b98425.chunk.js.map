{"version":3,"sources":["graphql/clients.ts","utils/tokenUtils.ts","state/reducers.ts","pages/PaymentMessage.tsx","state/state.tsx","../../../packages/ui-components/src/assets/placeholder.jpg","../../../packages/ui-components/src/data-display/Image/Image.tsx","../../../packages/ui-components/src/input-controls/Button/Button.tsx","../../../packages/ui-components/src/data-display/Card/Card.tsx","../../../packages/ui-components/src/data-display/ProductTile/ProductTile.tsx","../../../packages/ui-components/src/data-display/CategoryTile/CategoryTile.tsx","../../../packages/ui-components/src/input-controls/Input/Input.tsx","../../../packages/ui-components/src/forms/Login.tsx","../../../packages/ui-components/src/forms/Registration.tsx","../../../packages/ui-components/src/information/Loader/Loader.tsx","../../../packages/ui-components/src/navigation/ALink/ALink.tsx","../../../packages/ui-components/src/navigation/Navbar/Navbar.tsx","../../../packages/ui-components/src/navigation/Pagination/Pagination.tsx","../../../packages/ui-components/src/assets/webShopBanner.jpg","../../../packages/ui-components/src/navigation/Banner/Banner.tsx","../../../packages/ui-components/src/pages/CLP/CLP.tsx","../../../packages/ui-components/src/pages/PLP/PLP.tsx","Navigation.tsx","graphql/category/useGetCategories.ts","pages/Categories.tsx","graphql/category/useGetCategoryProducts.ts","pages/Category.tsx","graphql/cart/useGetCartProducts.ts","graphql/order/useCreateOrder.ts","graphql/order/useCreateOrderProducts.ts","components/CheckoutForm.tsx","graphql/order/useCreatePaymentIntent.ts","graphql/order/useUpdateProductsQty.ts","pages/CheckoutPage.tsx","graphql/product/useGetHomepageProducts.ts","pages/Home.tsx","graphql/useLogin.ts","pages/LoginPage.tsx","assets/failed.jpg","assets/success.jpg","graphql/order/useFinalizeOrder.tsx","graphql/product/useGetProductById.ts","graphql/cart/useAddItemToCart.ts","pages/ProductPage.tsx","graphql/useRegistration.ts","pages/RegistrationPage.tsx","graphql/cart/useRemoveItemFromCart.ts","pages/ShoppingCart.tsx","graphql/order/useGetUserOrders.ts","components/OrderInformation.tsx","components/OrderProduct.tsx","pages/Orders.tsx","components/PrivateRoute.tsx","AppRouter.tsx","App.tsx","index.tsx"],"names":["createApolloClient","authToken","ApolloClient","link","HttpLink","uri","process","headers","Authorization","cache","InMemoryCache","getUserFromToken","token","user","id","email","cart_id","JSON","parse","atob","split","error","UserReducer","state","action","type","payload","initialState","PaymenntMessageType","localStorage","getItem","UserContext","createContext","useUser","useContext","UserProvider","children","useReducer","reducer","dispatch","Provider","value","Image","src","alt","width","height","wrapperClassName","rounded","className","placeholder","Button","title","buttonColor","textColor","disabled","block","size","customClass","onClick","Card","body","buttonTitle","imageSrc","imageAlt","imageHeight","ProductTileBody","description","product","category","convertDate","date","d","dat","tm","Fragment","length","slice","price","quantity","date_start","course_cost","course_last","course_plan","date_end","place","ProductTile","name","image","navigate","useNavigate","CategoryTile","Input","defaultValue","errorText","labelText","labelClass","innerRef","htmlFor","Login","username","useForm","register","handleSubmit","formState","isDirty","isSubmitting","errors","onSubmit","data","password","required","message","Registration","watch","fullName","validate","repeat","Loader","text","ALink","path","to","Navbar","Pagination","onPageChange","displayPerPage","total","currentPage","pageCount","Math","ceil","Array","from","keys","map","page","Banner","color","banner","webShopBanner","CLP","categories","PLP","products","Navigation","useState","loggedIn","setLoggedIn","useEffect","removeItem","tkn","query","gql","Category","limit","offset","setCurrentPage","useQuery","variables","fetchPolicy","loading","useCallback","product_categories_aggregate","aggregate","count","product_categories","category_id","useLocation","products_aggregate","mutation","CheckoutForm","continueToPayment","first_name","last_name","country","city","address","zip_code","phone","CheckoutPage","useGetCartProducts","useMutation","createOrder","createOrderProducts","ceatePaymentIntent","updateProductsQty","isLoader","setIsLoader","cartItems","cart_item","orderTotal","a","total_price","response","orderId","insert_orders_one","objects","item","order_id","product_id","amount","currency","createPaymentIntent","window","location","replace","role","Home","index","LoginPage","sendLoginRequest","called","setError","login","accessToken","setItem","u","p","PaymentMessage","finalizeOrder","payment_intent_id","URLSearchParams","search","get","setTimeout","SUCCESS","success","failed","ProductPage","addItemToCart","setQuantity","toast","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","progress","undefined","onChange","e","parseInt","currentTarget","min","addToCart","newestOnTop","rtl","pauseOnFocusLoss","theme","RegistrationPage","sendRegRequest","registration","f","ShoppingCart","removeItemFromCart","refetch","cartItemId","cartItem","checkQuantity","OrderInformation","order","time","created_at","status","OrderProduct","Orders","user_id","viewMore","setViewMore","orderProducts","orderView","setOrderView","orders_aggregate","orders","viewOrder","PrivateRoute","AppRouter","apolloClient","setApolloClient","ApolloProvider","client","element","Categories","FAIL","ERROR","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.95b98425.chunk.js","sourcesContent":["import { ApolloClient, HttpLink, InMemoryCache } from '@apollo/client';\n\nconst createApolloClient = (authToken?: string | null) => {\n  return new ApolloClient({\n    link: new HttpLink({\n      uri: `${process.env.REACT_APP_HGE_ENDPOINT}/v1/graphql`,\n      headers: authToken\n        ? {\n            Authorization: `Bearer ${authToken}`,\n          }\n        : {},\n    }),\n    cache: new InMemoryCache(),\n  });\n};\n\nexport default createApolloClient;\n","export function getUserFromToken(token: string | null): { id: string; email: string, cart_id: string } {\n  const user = { id: '', email: '', cart_id: '' };\n  if (!token) {\n    return user;\n  }\n  try {\n    const { id, email, cart_id } = JSON.parse(atob(token.split('.')[1]));\n    return { id, email, cart_id };\n  } catch (error) {\n    return user;\n  }\n}\n","import { UserAction } from './actions';\nimport { initialState, UserState } from './state';\nexport default function UserReducer(state: UserState, action: UserAction): UserState {\n  switch (action.type) {\n    case 'SET_USER':\n      return { ...state, ...{ user: action.payload } };\n    case 'SET_TOKEN':\n      return { ...state, ...{ token: action.payload } };\n    case 'LOGOUT':\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { Button, Image, Loader } from '@team21/ui-components';\nimport React, { FC, useEffect } from 'react';\nimport failed from '../assets/failed.jpg';\nimport success from '../assets/success.jpg';\nimport useFinalizeOrder from '../graphql/order/useFinalizeOrder';\nimport { useUser } from '../state/state';\n\nexport enum PaymenntMessageType {\n  SUCCESS = 'SUCCESS',\n  FAIL = 'FAIL',\n  ERROR = 'ERROR',\n}\n\ntype Props = {\n  title: string;\n  type: PaymenntMessageType;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n};\n\nconst PaymentMessage: FC<Props> = ({ title, type, onClick }) => {\n  const [finalizeOrder, { loading }] = useFinalizeOrder();\n  const [{ user }] = useUser();\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n    const payment_intent_id = new URLSearchParams(window.location.search).get('payment_intent_id');\n    setTimeout(() => {\n      finalizeOrder({ variables: { payment_intent_id } });\n    }, 0);\n  }, [user]);\n  if (loading || !user.id) {\n    return <Loader />;\n  }\n  return (\n    <div className=\"w-1/3 m-40 mx-auto border-solid border-default border-lightGray\">\n      <div className=\"flex flex-col items-center justify-center\">\n        <Image src={type === PaymenntMessageType.SUCCESS ? success : failed} />\n\n        <div className=\"p-4 mt-8 text-center\">\n          <h5 className=\"mb-32 font-semibold text-xxl text-whitesmoke\">{title}</h5>\n\n          <Button\n            buttonColor={type ? 'success' : 'red'}\n            size=\"xl\"\n            textColor=\"whitesmoke\"\n            title={'Proceed'}\n            onClick={onClick}\n            customClass=\"mb-24\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PaymentMessage;\n","import React, { createContext, Dispatch, useContext, useReducer } from 'react';\nimport { getUserFromToken } from '../utils/tokenUtils';\nimport { UserAction } from './actions';\nimport reducer from './reducers';\n\nexport const initialState: UserState = {\n  user: getUserFromToken(localStorage.getItem('token')),\n  token: localStorage.getItem('token'),\n};\n\nexport type UserState = {\n  user: { id: string; email: string; cart_id: string };\n  token: string | null;\n};\n//TODO fix type\nconst UserContext = createContext<[UserState, Dispatch<UserAction> | null]>([initialState, null]);\nconst useUser = () => useContext(UserContext);\nconst UserProvider = ({ children }: { children: React.ReactNode }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return <UserContext.Provider value={[state, dispatch]}>{children}</UserContext.Provider>;\n};\n\nexport { UserProvider, useUser };\n","export default __webpack_public_path__ + \"static/media/placeholder.3c0a422b.jpg\";","import React, { FC } from 'react';\nimport placeholder from \"../../assets/placeholder.jpg\"\nimport \"./index.css\"\n\ntype Props = {\n  src: string;\n  alt?: string;\n  width?: string;\n  height?: string;\n  wrapperClassName?: string;\n  rounded?: boolean;\n};\n\nconst Image: FC<Props> = ({ src, alt, width, height, wrapperClassName, rounded }) => (\n    <div className={wrapperClassName}>\n        <div className={`w-${width ? width : 'full'} h-${height ? height : 'full'} p-4 mx-auto`}>\n            <img\n                src={src || placeholder}\n                alt={alt || 'image'}\n                className={`image ${rounded ? 'rounded-full' : 'rounded-none'} w-full max-h-full align-middle hover:opacity-90}`}\n            />\n        </div>\n    </div>\n);\n\nexport default Image;\n","import React, { FC } from 'react';\n\ntype Props = {\n  title?: string;\n  buttonColor?: string;\n  textColor?: string;\n  disabled?: boolean;\n  block?: boolean;\n  rounded?: boolean;\n  size?: string;\n  customClass?: string;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n};\n\nconst Button: FC<Props> = ({ title, buttonColor, textColor, disabled, block, rounded, size, customClass, onClick}) => (\n  <button\n    disabled={disabled}\n    onClick={onClick}\n    className={`bg-${buttonColor ? buttonColor : 'primary'} \n      text-${textColor ? textColor : 'white'}\n      px-40 py-12 whitespace-nowrap\n      text-${size ? size : 'base'}\n      hover:bg-opacity-90\n      ${disabled ? 'opacity-60 cursor-not-allowed' : 'cursor-pointer'}\n      ${rounded ? 'rounded-full' : ''}\n      ${block ? 'w-full' : ''}\n      ${customClass ? customClass : ''}`\n    }\n  >\n    {title && <span className='font-bold'>{title}</span>}\n  </button>\n);\n\nexport default Button;\n","import React, { FC, ReactNode } from 'react';\nimport { Image } from '../Image'\nimport { Button } from '../../input-controls/Button'\nimport placeholder from \"../../assets/placeholder.jpg\"\n\ntype Props = {\n  title?: string;\n  body?: ReactNode;\n  buttonTitle?: string;\n  imageSrc?: string;\n  imageAlt?: string;\n  imageHeight?: string;\n  onClick?: React.MouseEventHandler<HTMLButtonElement>;\n  customClass?: string;\n\n};\n\nconst Card: FC<Props> = ({ title, body, buttonTitle, onClick, imageSrc, imageAlt, imageHeight, customClass}) => (\n    <div className={`hover:shadow-lg overflow-hidden p-4 border-default border-solid border-lightGray ${customClass ? customClass : ''}`}>\n      <Image\n        src={`${imageSrc ? imageSrc : placeholder}`}\n        alt={`${imageAlt ? imageAlt : \"card-image\"}`}\n        height={imageHeight}\n      />\n    \n      <div className=\"p-4 mt-8 text-center\">\n        <h5 className=\"text-whitesmoke text-xl font-semibold mb-8 break-words\">{title}</h5>\n    \n        <div className=\"mb-24\">\n         {body}\n        </div>\n    \n        <Button buttonColor=\"primary\" textColor=\"whitesmoke\" title={buttonTitle} onClick={onClick} customClass=\"mb-12\"/>\n      </div>\n    </div>\n);\n\nexport default Card;\n","import React, { FC } from 'react';\nimport { Card } from '../Card/'\nimport { Product } from '@team21/types'\nimport { useNavigate, } from 'react-router-dom'\nimport \"./index.css\"\n\ntype Props = {\n    product: Product;\n    category?: string;\n};\n\nconst ProductTileBody: FC<Props> = ({product, category}) => { \n    function setDescription(description:string){\n        if(description.length < 90)\n            return description\n        return `${description.slice(0, 90)}...` \n    }\n\n    function convertDate (date: string) {\n        const d = date.split('T')\n        const dat = d[0].split('-')\n        const time = d[1].split('.')\n        const tm = time[0].split('+')\n        return dat[2]+\"/\"+dat[1]+\"/\"+dat[0]+\" \"+tm[0]\n    }\n\n    return <React.Fragment> \n        <div className=\"description my-8\">\n            <p className=\"text-base text-lightGray px-8 whitespace-normal break-all text-left\"> {product.description && setDescription(product.description)} </p>\n        </div>\n        <div className=\"my-12\">\n            {product.price && <span className=\"text-xl text-whitesmoke font-semibold\"> ${product.price} </span>}\n        </div>\n        <div className=\"my-8\">\n            { product && product.quantity && <span className={`${product.quantity > 0 ? 'text-success' : 'text-red'} text-md font-semibold`}> {product.quantity > 0 ? `In Stock: ${product.quantity}` : 'Out of Stock'} </span> }\n            { product && product.date_start && !product.course_cost && !product.course_last && !product.course_plan && <div className=\"text-whitesmoke text-md font-semibold text-center mb-16\">Start: {convertDate(product.date_start)}</div> }\n            { product && product.date_end && !product.course_cost && !product.course_last && !product.course_plan && <div className=\"text-whitesmoke text-md font-semibold text-center mb-16\">End: {convertDate(product.date_end)} </div> }\n            { product && product.place && <div className=\"text-success text-lg font-semibold\"> {product.place} </div> }\n        </div>\n    </React.Fragment>\n};\n\nconst ProductTile: FC<Props> = ({ product, category }) => {\n    const { id, name, image } = product;\n    const navigate = useNavigate();\n  \n    function openProduct() {\n        navigate('/product', { state:{ id: id, category: category ? category: '' }});\n    }\n\n    return <Card \n        title={name}\n        imageSrc={image}\n        imageAlt={`${name}-image`}\n        imageHeight=\"200px\"\n        buttonTitle={\"More Details\"}\n        onClick={openProduct}\n        body={ \n            <ProductTileBody product={product} category={category} />\n        } \n        customClass=\"product-tile w-80 mx-24 my-12\"\n    />\n};\n\nexport default ProductTile;\n","import React, { FC } from 'react';\nimport { useNavigate, } from 'react-router-dom'\nimport { Card } from '../Card/'\nimport { Category } from '@team21/types'\nimport \"./index.css\"\n\n\ntype Props = {\n    category: Category;\n};\n\nconst CategoryTile: FC<Props> = ({ category }) => {\n    const navigate = useNavigate();\n  \n    function openCategory() {\n        navigate('/category', { state:{ id: category.id , name: category.name }});\n    }\n\n    return <Card \n        title={`${category.name}`}\n        imageSrc={category.image}\n        imageAlt={`${category.name}-image`}\n        imageHeight=\"120px\"\n        buttonTitle={\"View More\"}\n        onClick={openCategory}\n        customClass=\"category-tile w-52 mx-24 my-12\"\n    />\n};\n\nexport default CategoryTile;\n","import React, { FC } from 'react';\nimport type { UseFormRegisterReturn } from 'react-hook-form';\n\ntype Props = {\n  id: string;\n  wrapperClassName?: string;\n  placeholder?: string;\n  type: string | 'text';\n  errorText?: string;\n  labelText?: string;\n  labelClass?: string;\n  width?: string;\n  innerRef?: UseFormRegisterReturn;\n  customClass?: string;\n  defaultValue?: string;\n};\n\nconst Input: FC<Props> = ({\n  id,\n  defaultValue = '',\n  wrapperClassName,\n  placeholder,\n  type,\n  errorText,\n  labelText,\n  labelClass,\n  width,\n  innerRef,\n  customClass,\n}) => (\n  <div className={wrapperClassName}>\n    <label htmlFor={id}>{labelText && <span className={labelClass}>{labelText}</span>}</label>\n    <div className=\"mt-8\">\n      <input\n        defaultValue={defaultValue}\n        className={`${customClass ? customClass : ''} w-${\n          width ? width : 'full'\n        } bg-white text-dark border-default border-solid border-lightGray hover:border-gray focus:outline-none focus:border-dark pl-4 py-4`}\n        id={id}\n        type={type}\n        placeholder={placeholder}\n        {...innerRef}\n      />\n    </div>\n    {errorText && <p className=\"mb-2 text-sm text-red\">{errorText}</p>}\n  </div>\n);\n\nexport default Input;\n","import React, { FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button, Input } from '../input-controls';\n\ntype Props = {\n  title?: string;\n  onClick: (username: string, password: string) => void;\n  username?: boolean;\n  error: boolean;\n};\n\nconst Login: FC<Props> = ({ title = 'Login', onClick, username, error }) => {\n  const { register, handleSubmit, formState } = useForm();\n  const { isDirty, isSubmitting, errors } = formState;\n  const onSubmit = (data: { username: string; password: string }) =>\n    onClick(data.username, data.password);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"p-16 w-96\">\n        <div className=\"pb-4 font-bold text-center text-whitesmoke text-h2 mb-24\">{title}</div>\n        <hr className=\"mb-24 border-gray\"/>\n        <Input\n          id=\"username\"\n          labelText={`${username ? 'Username' : 'Email'}`}\n          labelClass=\"text-whitesmoke text-lg\"\n          type=\"text\"\n          placeholder=\"Please enter username\"\n          innerRef={register('username', {\n            required: `${username ? 'Username required' : 'Email required'}`,\n          })}\n          errorText={errors.username?.message}\n          customClass='mb-16 rounded-xs bg-white text-dark'\n        />\n        <Input\n          id=\"password\"\n          labelText=\"Password\"\n          labelClass=\"text-whitesmoke text-lg\"\n          type=\"password\"\n          placeholder=\"Please enter password\"\n          innerRef={register('password', {\n            required: 'Password Required',\n          })}\n          errorText={errors.password?.message}\n          customClass='mb-16 rounded-xs'\n        />\n        {error && <div className=\"text-red\">Wrong email or password!</div>}\n        <div className=\"flex justify-center pt-12 pb-12\">\n          <Button block={true} title=\"Login\" disabled={!isDirty || isSubmitting}></Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Login;\n","import React, { FC } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Button, Input } from '../input-controls';\n\ntype Props = {\n  title?: string;\n  onClick: (fullName: string, email: string, password: string) => void;\n  error: boolean;\n};\n\nconst Registration: FC<Props> = ({ title = 'Registration', onClick, error }) => {\n  const { register, handleSubmit, formState, watch } = useForm();\n  const { isDirty, isSubmitting, errors } = formState;\n  const onSubmit = (data: { fullName: string; email: string; password: string }) =>\n    onClick(data.fullName, data.email, data.password);\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"p-16 w-96\">\n        <div className=\"pb-4 font-bold text-center text-whitesmoke text-h2 mb-12\">{title}</div>\n        <hr className=\"mb-24 border-gray\"/>\n        <Input\n          id=\"fullName\"\n          labelText=\"Full name\"\n          labelClass=\"text-whitesmoke text-lg\"\n          type=\"text\"\n          placeholder=\"Please enter name\"\n          innerRef={register('fullName', {\n            required: 'Name required',\n          })}\n          errorText={errors.fullName?.message}\n          customClass='mb-16 rounded-xs'\n        />\n        <Input\n          id=\"email\"\n          labelText=\"Email\"\n          labelClass=\"text-whitesmoke text-lg\"\n          type=\"text\"\n          placeholder=\"Please enter email\"\n          innerRef={register('email', {\n            required: 'Email required',\n          })}\n          errorText={errors.email?.message}\n          customClass='mb-16 rounded-xs'\n        />\n        <Input\n          id=\"password\"\n          labelText=\"Password\"\n          labelClass=\"text-whitesmoke text-lg\"\n          type=\"password\"\n          placeholder=\"Please enter password\"\n          innerRef={register('password', {\n            required: 'Password Required',\n          })}\n          errorText={errors.password?.message}\n          customClass='mb-16 rounded-xs'\n        />\n        <Input\n          id=\"repeat\"\n          labelText=\"Repeat password\"\n          labelClass=\"text-whitesmoke text-lg\"\n          type=\"password\"\n          placeholder=\"Please repeat password\"\n          innerRef={register('repeat', {\n            required: 'Password Required',\n            validate: (value) => (value === watch('password') ? true : 'Passwords do not match!'),\n          })}\n          errorText={errors.repeat?.message}\n          customClass='mb-16 rounded-xs'\n        />\n        {error && <div className=\"text-red\">Email already registred!</div>}\n        <div className=\"flex justify-center pt-12 pb-12\">\n          <Button block title=\"Register\" disabled={!isDirty || isSubmitting}></Button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default Registration;\n","import React, { FC } from 'react';\nimport './index.css';\n\ntype Props = {\n  text?: string;\n};\n\nconst Loader: FC<Props> = ({ text }) => (\n  <div className=\"absolute flex items-center justify-center w-full top-1/4\">\n    <p className=\"mr-16 text-primary text-h2\"> {text ? text : 'Loading ...'} </p>\n    <div className=\"w-16 h-16 rounded-full loader-spin\" />\n  </div>\n);\n\nexport default Loader;\n","import React, { FC } from 'react';\nimport { Link } from 'react-router-dom'\n\ntype Props = {\n  name: string;\n  path?: string;\n  onClick?: React.MouseEventHandler<HTMLAnchorElement>;\n};\n\nconst ALink: FC<Props> = ({ name, path, onClick }) => (\n    <li className=\"my-8 mx-24 hover:opacity-60\"> \n      { \n        onClick ? <a className=\"no-underline text-whitesmoke text-xl cursor-pointer\" onClick={onClick}>{name}</a> \n        : <Link className=\"no-underline text-whitesmoke text-xl\" to={path}> {name} </Link> \n      }\n    </li>\n);\n\nexport default ALink;\n","import React, { FC, ReactNode } from 'react';\n\ntype Props = {\n    children?: ReactNode;\n}\n\nconst Navbar: FC<Props> = ({children}) => (\n    <div>\n        <nav>\n            <ul className=\"w-full flex flex-wrap justify-center py-8 list-none bg-bcPrimary\">\n                {children}\n            </ul>\n        </nav>\n    </div>\n);\n\nexport default Navbar;\n","/* This example requires Tailwind CSS v2.0+ */\nimport { ArrowNarrowLeftIcon, ArrowNarrowRightIcon } from '@heroicons/react/solid';\nimport React, { FC } from 'react';\n\ntype Props = {\n  displayPerPage: number;\n  currentPage: number;\n  onPageChange: (newPage: number) => void;\n  total: number;\n};\n\nconst Pagination: FC<Props> = ({ onPageChange, displayPerPage, total, currentPage }) => {\n  const pageCount = Math.ceil(total / displayPerPage);\n\n  return (\n    <nav className=\"flex items-center justify-between px-40 border-t border-gray-200\">\n      <div className=\"flex flex-1 w-0 -mt-px\">\n        <div\n          onClick={() => onPageChange(currentPage - 1)}\n          className={`text-xl cursor-pointer inline-flex items-center pt-4 pr-1 font-medium text-primary border-t-2 border-transparent hover:opacity-60 ${\n            currentPage === 0 ? 'invisible' : ''\n          }`}\n        >\n          <ArrowNarrowLeftIcon className=\"w-8 h-8 mr-3 text-gray-400\" aria-hidden=\"true\" />\n          Previous\n        </div>\n      </div>\n      <div className=\"hidden md:-mt-px md:flex\">\n        {Array.from(Array(pageCount).keys()).map((page) => (\n          <div\n            onClick={() => onPageChange(page)}\n            key={page + 1}\n            className={`text-xl cursor-pointer inline-flex items-center px-8 pb-2 font-medium border-b-2  ${\n              page === currentPage\n                ? 'border-primary text-primary'\n                : 'border-transparent text-whitesmoke hover:opacity-60'\n            } `}\n          >\n            {page + 1}\n          </div>\n        ))}\n      </div>\n      <div className=\"flex justify-end flex-1 w-0 -mt-px\">\n        <div\n          onClick={() => onPageChange(currentPage + 1)}\n          className={`${\n            currentPage === pageCount - 1 ? 'hidden' : ''\n          } text-xl cursor-pointer inline-flex items-center pt-4 pr-1 font-medium text-primary border-t-2 border-transparent hover:opacity-60`}\n        >\n          <ArrowNarrowRightIcon className=\"w-8 h-8 mr-3 text-gray-400\" aria-hidden=\"true\" />\n          Next\n        </div>\n      </div>\n    </nav>\n  );\n};\n\nexport default Pagination;\n","export default __webpack_public_path__ + \"static/media/webShopBanner.2bef6c30.jpg\";","import React, { FC } from 'react';\nimport { Button } from '../../input-controls/Button'\nimport webShopBanner from '../../assets/webShopBanner.jpg'\nimport { useNavigate } from 'react-router';\n\ntype Props = {\n    type: boolean,\n    path: string,\n    color: string,\n    title: string,\n    text: string\n};\n\nconst Banner: FC<Props> = ({ type, path, color, title, text }) => {\n  const navigate = useNavigate();\n  const banner = type ? webShopBanner : ''  \n  return (\n    <div className='w-full lg:h-500px xl:h-600px flex flex-col xl:flex-row justify-between'>\n      <img src={banner} />\n      <div className={`flex justify-center items-center text-center flex-col w-full p-24 bg-${color}`}>\n          <h2 className='text-h1 mb-24'>{title}</h2>\n          <p className='mb-24'>{text}</p>\n          <Button title='Shop Now' onClick={()=>navigate(path)}/>\n      </div>  \n    </div>\n  );\n};\nexport default Banner;\n","import React, { FC } from 'react';\nimport { CategoryTile } from '../../data-display/CategoryTile'\nimport { Category } from '@team21/types'\n\ntype Props = {\n    categories: Category[];\n}\n\nconst CLP: FC<Props> = ({categories}) => {\n\n    return <div className=\"w-10/12 p-24 mx-auto\">\n        <h1 className=\"text-whitesmoke text-h1 text-left mb-24 ml-24\">Categories</h1>\n        <div className=\"flex justify-items-start items-center flex-wrap\">\n            {categories?.map((category: Category)=>(\n                <CategoryTile key={category.id} category={category}/>\n            ))}\n        </div>\n    </div>\n\n};\n\nexport default CLP;\n","import React, { FC } from 'react';\nimport { ProductTile } from '../../data-display/ProductTile'\nimport { Product } from '@team21/types'\n\ntype Props = {\n    id: string;\n    name: string;\n    products?: Product[];\n};\n\nconst PLP: FC<Props> = ({ name, products }) => {  \n\n    return <div className=\"w-10/12 p-24 mx-auto\">\n        <h1 className=\"text-whitesmoke text-h1 text-left mb-24 ml-24\">{name}</h1>\n        <div className=\"flex justify-items-start items-center flex-wrap\">\n            {products?.map((product: Product)=>(\n                <ProductTile key={product.id} product={product} category={name}/>\n            ))}\n        </div>\n    </div>\n};\n\nexport default PLP;\n","import React, { FC, useState, useEffect } from 'react';\nimport { useUser } from './state/state';\nimport { Navbar, ALink } from '@team21/ui-components'\nimport { useNavigate } from 'react-router';\n\nconst Navigation: FC = () => {\n    const [{ token }, dispatch] = useUser();\n    const navigate = useNavigate();\n    const [loggedIn, setLoggedIn] = useState(token);\n\n    useEffect(() => {\n        setLoggedIn(token)\n    }, [token])\n\n    function logout() {\n        dispatch?.({ type: 'LOGOUT'})\n        localStorage.removeItem('token')\n        const tkn = localStorage.getItem('token')\n        setLoggedIn(tkn)\n        navigate('/login');\n    }\n\n    return (\n        <Navbar>\n            <ALink path=\"/\" name=\"Home\" />\n            <ALink path=\"/categories\" name=\"Categories\" />\n            { loggedIn && <ALink path=\"/cart\" name=\"Cart\" /> }\n            { loggedIn && <ALink path=\"/orders\" name=\"Orders\" /> }\n            { loggedIn && <ALink onClick={logout} name=\"Logout\" /> }\n            { !loggedIn && <ALink path=\"/login\" name=\"Login\" /> }\n            { !loggedIn && <ALink path=\"/register\" name=\"Register\" /> }\n        </Navbar>\n    )\n}\n\nexport default Navigation;","import { gql, useQuery } from '@apollo/client';\nimport { Category } from '@team21/types'\n\nconst query = gql`\n    query UseGetCategories ($limit: Int!, $offset: Int! ) {\n        product_categories_aggregate {\n          aggregate {\n            count\n          }\n        }\n        product_categories(limit: $limit, offset: $offset ) {\n            id\n            name\n            image\n        }\n    }\n`;\n\ntype UseGetCategoriesReturn = {\n  product_categories_aggregate: {\n    aggregate: {\n      count: number;\n    };\n  };\n  product_categories: Category[];\n};\n\nexport default (limit?: number, offset?: number) =>\n  useQuery<UseGetCategoriesReturn>(query, { variables: { limit, offset }, fetchPolicy:'no-cache' });\n","import { CLP, Loader, Pagination } from '@team21/ui-components';\nimport React, { FC, useState, useCallback } from 'react';\nimport useGetCategories from '../graphql/category/useGetCategories';\n\nconst PER_PAGE = 12;\n\nconst Category: FC<Record<string, never>> = () => {\n    const [currentPage, setCurrentPage] = useState(0);\n    const { data, loading } = useGetCategories(PER_PAGE, currentPage * PER_PAGE);\n\n    const onPageChange = useCallback(\n        (page: number) => {\n            setCurrentPage(page);\n        },\n        [setCurrentPage],\n    );\n\n    if(!data && loading) return <Loader />;\n\n    const total = data?.product_categories_aggregate.aggregate.count\n    if(total === 0) return <div className=\"flex w-full absolute top-1/4 items-center justify-center text-xxl text-whitesmoke\">Currently there are no items...</div>\n    \n    return (\n        <React.Fragment>\n            <CLP categories={data!.product_categories} />\n            { total && (total > PER_PAGE) && <div className=\"w-10/12 p-24 mx-auto\">\n                <Pagination\n                    currentPage={currentPage}\n                    total={total ?? 0}\n                    displayPerPage={PER_PAGE}\n                    onPageChange={onPageChange}\n                />\n            </div>}\n      </React.Fragment>\n    );\n};\n\nexport default Category;\n","import { gql, useQuery } from '@apollo/client';\nimport { Product } from '@team21/types';\n\nconst query = gql`\n  query UseGetCategoryProducts($category_id: uuid!, $limit: Int!, $offset: Int!) {\n    products(where: {category_id: {_eq: $category_id}}, limit: $limit, offset: $offset) {\n      id\n      image\n      name\n      price\n      description\n      quantity\n      category_id\n    }\n    products_aggregate(where: {category_id: {_eq: $category_id}}) {\n      aggregate {\n        count\n      }\n    }\n  }\n`;\n\ntype UseGetCategoryProductsReturn = {\n  products: Product[];\n  products_aggregate: {\n    aggregate: {\n      count: number;\n    };\n  };\n};\n\nexport default (category_id: string, limit?: number, offset?: number) =>\n  useQuery<UseGetCategoryProductsReturn>(query, { variables: {category_id, limit, offset }, fetchPolicy:'no-cache' });\n","import { PLP, Loader, Pagination } from '@team21/ui-components';\nimport React, { FC, useCallback, useState} from 'react';\nimport { useLocation } from 'react-router-dom'\nimport UseGetCategoryProducts from '../graphql/category/useGetCategoryProducts';\n\nconst PER_PAGE = 8;\n\nconst Category: FC<Record<string, never>> = () => {\n    const { state } = useLocation();\n    const [currentPage, setCurrentPage] = useState(0);\n    const { data, loading } = UseGetCategoryProducts(state.id, PER_PAGE, currentPage * PER_PAGE);\n\n    const onPageChange = useCallback(\n        (page: number) => {\n            setCurrentPage(page);\n        },\n        [setCurrentPage],\n    );\n\n    if (!data && loading) return <Loader />;\n\n    const total = data?.products_aggregate.aggregate.count\n    if(total === 0) return <div className=\"flex w-full absolute top-1/4 items-center justify-center text-xxl text-whitesmoke\">Currently there are no items...</div>\n\n    return (\n        <React.Fragment>\n            <PLP id={state.id} name={state.name} products={data!.products} />\n            {total && (total > PER_PAGE) && <div className=\"w-10/12 p-24 mx-auto\">\n                <Pagination\n                    currentPage={currentPage}\n                    total={total ?? 0}\n                    displayPerPage={PER_PAGE}\n                    onPageChange={onPageChange}\n                />\n            </div>}\n         </React.Fragment>\n    );\n};\nexport default Category;","import { gql, useQuery } from '@apollo/client';\nimport { Product } from '@team21/types'\n\nconst query = gql`\n    query UseGetCartProducts($cart_id: uuid!) {\n        cart_item(where: {cart_id: {_eq: $cart_id}}) {\n            id\n            quantity\n            product {\n              id\n              image\n              name\n              price\n              quantity\n            }\n        }\n    }\n`;\n\ntype UseGetCartProductsReturn = {\n  cart_item: {\n    id: string;\n    quantity: number;\n    product: Product;\n  }[];\n};\n\nexport default (cart_id?: string) =>\n  useQuery<UseGetCartProductsReturn>(query, { variables: { cart_id }, fetchPolicy:'no-cache' });\n","import { gql, useMutation } from '@apollo/client';\nconst mutation = gql`\n  mutation MyMutation(\n    $first_name: String!\n    $last_name: String!\n    $country: String!\n    $city: String!\n    $address: String!\n    $zip_code: String!\n    $phone: String!\n    $total_price: numeric!\n  ) {\n    insert_orders_one(\n      object: {\n        first_name: $first_name\n        last_name: $last_name\n        country: $country\n        city: $city\n        address: $address\n        zip_code: $zip_code\n        phone: $phone\n        total_price: $total_price\n      }\n    ) {\n      id\n    }\n  }\n`;\nexport default () => useMutation(mutation);\n","import { gql, useMutation } from '@apollo/client';\nconst mutation = gql`\n  mutation InsertOrderProducts($cart_id: uuid!, $objects: [order_products_insert_input!]!) {\n    insert_order_products(objects: $objects) {\n      affected_rows\n    }\n    delete_cart_item(where: { cart_id: { _eq: $cart_id } }) {\n      affected_rows\n    }\n  }\n`;\nexport default () => useMutation(mutation);\n","import React, { FC } from 'react';\nimport { Button, Input } from '@team21/ui-components'\nimport { useForm } from 'react-hook-form';\nimport { CheckoutDataForm } from '@team21/types';\n\ntype Props = {\n  continueToPayment: (data: CheckoutDataForm) => void\n}\n\nconst CheckoutForm: FC<Props> = ({continueToPayment}) => {\n  const { register, handleSubmit, formState: { errors } } = useForm();\n\n  return <React.Fragment>\n     <form onSubmit={handleSubmit(continueToPayment)}>\n        <Input \n            id=\"first_name\" \n            type=\"text\" \n            labelText=\"First Name\"\n            labelClass=\"text-whitesmoke text-lg\"\n            wrapperClassName=\"mb-12\" \n            customClass='mb-8 rounded-xs'\n            innerRef={register('first_name', {\n                required: 'First Name required!',\n            })}\n            errorText={errors.first_name?.message}\n        />\n        <Input \n            id=\"last_name\" \n            type=\"text\" \n            labelText=\"Last Name\" \n            labelClass=\"text-whitesmoke text-lg\"\n            wrapperClassName=\"mb-12\" \n            customClass='mb-8 rounded-xs'\n            innerRef={register('last_name', {\n                required: 'Last Name required!',\n            })}\n            errorText={errors.last_name?.message}\n        />\n        <Input \n            id=\"country\" \n            type=\"text\" \n            labelText=\"Country\" \n            labelClass=\"text-whitesmoke text-lg\"\n            wrapperClassName=\"mb-12\" \n            customClass='mb-8 rounded-xs'\n            innerRef={register('country', {\n                required: 'Country required!',\n            })}\n            errorText={errors.country?.message}\n        />\n        <Input \n            id=\"city\" \n            type=\"text\" \n            labelText=\"City\" \n            labelClass=\"text-whitesmoke text-lg\"\n            wrapperClassName=\"mb-12\" \n            customClass='mb-8 rounded-xs'\n            innerRef={register('city', {\n                required: 'City required!',\n            })}\n            errorText={errors.city?.message}\n        />\n        <Input \n            id=\"address\" \n            type=\"text\" \n            labelText=\"Address\" \n            labelClass=\"text-whitesmoke text-lg\"\n            wrapperClassName=\"mb-12\" \n            customClass='mb-8 rounded-xs'\n            innerRef={register('address', {\n                required: 'Address required!',\n            })}\n            errorText={errors.address?.message}\n        />\n        <Input \n            id=\"zip_code\" \n            type=\"text\" \n            labelText=\"Zip Code\" \n            labelClass=\"text-whitesmoke text-lg\"\n            wrapperClassName=\"mb-12\" \n            customClass='mb-8 rounded-xs'\n            innerRef={register('zip_code', {\n                required: 'Zip code required!',\n            })}\n            errorText={errors.zip_code?.message}\n        />\n        <Input \n            id=\"phone\" \n            type=\"text\" \n            labelText=\"Phone\" \n            labelClass=\"text-whitesmoke text-lg\"\n            wrapperClassName=\"mb-12\" \n            customClass='mb-8 rounded-xs'\n            innerRef={register('phone', {\n                required: 'Phone required!',\n            })}\n            errorText={errors.phone?.message}\n        />\n        <Button buttonColor=\"primary\" size=\"md\" textColor=\"whitesmoke\" title=\"Continue to Payment\" customClass='mt-16' block={true} />\n    </form>\n  </React.Fragment>\n                      \n};\n\nexport default CheckoutForm;\n","import { gql, useMutation } from '@apollo/client';\nconst mutation = gql`\n  mutation CreatePaymentIntent($amount: Float!, $currency: String = \"USD\", $order_id: uuid!) {\n    createPaymentIntent(data: { amount: $amount, currency: $currency, order_id: $order_id }) {\n      link\n    }\n  }\n`;\nexport default () => useMutation(mutation);\n","import { gql, useMutation } from '@apollo/client';\nconst mutation = gql`\n    mutation updateProductsQty($id: uuid!, $quantity: Int!) {\n        update_products(where: {id: {_eq: $id}}, _set: {quantity: $quantity}) {\n            affected_rows\n        }\n    }  \n`;\nexport default () => useMutation(mutation);\n","import { CartItem, CheckoutDataForm } from '@team21/types';\nimport { Image, Loader } from '@team21/ui-components';\nimport useGetCartProducts from '@team21/web-shop-front/src/graphql/cart/useGetCartProducts';\nimport useCreateOrder from '@team21/web-shop-front/src/graphql/order/useCreateOrder';\nimport useCreateOrderProducts from '@team21/web-shop-front/src/graphql/order/useCreateOrderProducts';\nimport { useUser } from '@team21/web-shop-front/src/state/state';\nimport React, { FC, useState } from 'react';\nimport CheckoutForm from '../components/CheckoutForm';\nimport useCreatePaymentIntent from '../graphql/order/useCreatePaymentIntent';\nimport useUpdateProductsQty from '../graphql/order/useUpdateProductsQty';\n\nconst CheckoutPage: FC = () => {\n  const [{ user }] = useUser();\n  const { data, loading } = useGetCartProducts(user.cart_id);\n  const [createOrder] = useCreateOrder();\n  const [createOrderProducts] = useCreateOrderProducts();\n  const [ceatePaymentIntent] = useCreatePaymentIntent();\n  const [updateProductsQty] = useUpdateProductsQty();\n\n  const [isLoader, setIsLoader] = useState(false);\n\n  if (!data && loading) return <Loader />;\n  if (isLoader) return <Loader />;\n\n  const cartItems = data?.cart_item;\n\n  let orderTotal = 0;\n  cartItems?.map((item: CartItem) => {\n    orderTotal += item.product.price * item.quantity;\n  });\n\n  async function continueToPayment(data: CheckoutDataForm) {\n    setIsLoader(true);\n    const response = await createOrder({\n      variables: {\n        first_name: data.first_name,\n        last_name: data.last_name,\n        country: data.country,\n        city: data.city,\n        address: data.address,\n        zip_code: data.zip_code,\n        phone: data.phone,\n        total_price: orderTotal,\n      },\n    });\n    const orderId = response.data.insert_orders_one.id;\n    if (orderId && cartItems) {\n      const objects = cartItems.map((item) => ({\n        order_id: orderId,\n        price: item.product.price,\n        product_id: item.product.id,\n        quantity: item.quantity,\n      }));\n      const { cart_id } = user;\n\n      await createOrderProducts({ variables: { objects, cart_id } });\n\n      for (const item of cartItems) {\n        await updateProductsQty({\n          variables: { id: item.product.id, quantity: item.product.quantity - item.quantity },\n        });\n      }\n\n      const {\n        data: { createPaymentIntent },\n      } = await ceatePaymentIntent({\n        variables: { amount: orderTotal, currency: 'USD', order_id: orderId },\n      });\n      window.location.replace(\n        `https://192.168.43.234:3000/choose-provider/${process.env.REACT_APP_PSP_API_KEY}/${createPaymentIntent.link}`,\n      );\n    }\n\n    setIsLoader(false);\n  }\n\n  return (\n    <div className=\"w-10/12 p-24 mx-auto\">\n      <h1 className=\"mb-32 text-h1 text-whitesmoke\"> Checkout </h1>\n      <div className=\"flex justify-between\">\n        <div className=\"flex flex-col w-2/5 px-40\">\n          <h2 className=\"mb-24 font-medium text-left text-h3 text-whitesmoke\">\n            Contact information\n          </h2>\n          <CheckoutForm continueToPayment={continueToPayment} />\n        </div>\n        <div className=\"flex flex-col w-3/5 px-40\">\n          <h2 className=\"mb-24 font-medium text-left text-h3 text-whitesmoke\">Order Summary</h2>\n          <div className=\"mb-64 overflow-auto h-550px\">\n            <ul role=\"list\">\n              {cartItems?.map((item: CartItem) => (\n                <li key={item.id} className=\"flex mb-16 h-150px\">\n                  <Image\n                    src={item.product.image}\n                    alt={`${item.product.name}-image`}\n                    wrapperClassName=\"flex justify-center items-center w-1/4 border-default border-solid border-lightGray\"\n                  />\n                  <div className=\"flex flex-col flex-1 pb-12 mx-24\">\n                    <div className=\"flex justify-between text-xl font-medium text-gray-900\">\n                      <h3 className=\"text-whitesmoke\">{item.product.name}</h3>\n                      <p className=\"ml-4 text-whitesmoke\">${item.product.price}</p>\n                    </div>\n                    <div className=\"flex items-end justify-between flex-1 text-md\">\n                      <p className=\"text-lightGray\">Qty: {item.quantity}</p>\n                    </div>\n                  </div>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className=\"border-solid border-t-default border-lightGray\">\n            <div className=\"flex justify-between mt-12 mb-24 font-medium text-gray-500 text-md\">\n              <p className=\"text-xl text-whitesmoke\">Order Total</p>\n              <p className=\"text-xl text-whitesmoke\">${orderTotal}</p>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutPage;\n","import { gql, useQuery } from '@apollo/client';\nimport { Product } from '@team21/types'\n\nconst query = gql`\n    query UseGetHomepageProducts($limit: Int!) {\n        products(order_by: {price: desc}, limit: $limit) {\n          id\n          image\n          name\n          price\n          description\n          quantity\n          category_id\n        }\n    }\n`;\n\ntype UseGetHomepageProducts = {\n  products: Product[];\n};\n\nexport default (limit?: number) =>\n  useQuery<UseGetHomepageProducts>(query, { variables: { limit }, fetchPolicy:'no-cache'});\n","import { ProductTile, Loader, Banner } from '@team21/ui-components';\nimport React, { FC } from 'react';\nimport { Product } from '@team21/types'\nimport useGetHomepageProducts from '../graphql/product/useGetHomepageProducts';\n\nconst Home: FC<Record<string, never>> = () => {\n  const { data, loading } = useGetHomepageProducts(3);\n\n  if (!data && loading) return <Loader />;\n\n  return <div className=\"w-10/12 p-24 mx-auto\">\n    <h1 className=\"text-whitesmoke text-h1 text-center my-40 ml-24\">Welcome to Web Shop!</h1>\n    <Banner type path=\"/categories\" color=\"blue\" title='Laptops' text='We have the best offer of laptops!'/>\n    <h2 className=\"text-h1 text-whitesmoke text-center my-40 ml-24\">Best Sellers</h2>\n    <div className=\"flex justify-center items-center flex-wrap\">\n        {data?.products?.map((product: Product, index: number)=>(\n            <ProductTile key={index} product={product}/>\n        ))}\n    </div>\n  </div>\n};\n\nexport default Home;\n","import { gql, useMutation } from '@apollo/client';\n\nconst mutation = gql`\n  mutation Login($username: String!, $password: String!) {\n    login(username: $username, password: $password) {\n      accessToken\n    }\n  }\n`;\n\nexport default () => useMutation(mutation);\n","import { Login } from '@team21/ui-components';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport useLogin from '../graphql/useLogin';\nimport { useUser } from '../state/state';\nimport { getUserFromToken } from '../utils/tokenUtils';\n\nconst LoginPage: FC<Record<string, never>> = () => {\n  const [sendLoginRequest, { data, loading, called }] = useLogin();\n  const [error, setError] = useState(false);\n  const [, dispatch] = useUser();\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!called || !data) return;\n    if (data?.login?.accessToken) {\n      dispatch?.({ type: 'SET_TOKEN', payload: data.login.accessToken });\n      dispatch?.({ type: 'SET_USER', payload: getUserFromToken(data.login.accessToken) });\n      localStorage.setItem('token', data.login.accessToken);\n      navigate('/');\n    } else {\n      setError(true);\n    }\n  }, [data, called]);\n  return (\n    <div className=\"flex flex-col items-center justify-between w-full top-1/4 absolute \">\n      <Login\n        error={error}\n        onClick={(u, p) => sendLoginRequest({ variables: { username: u, password: p } })}\n      />\n    </div>\n  );\n};\n\nexport default LoginPage;\n","export default __webpack_public_path__ + \"static/media/failed.a7222140.jpg\";","export default __webpack_public_path__ + \"static/media/success.ac81e080.jpg\";","import { gql, useMutation } from '@apollo/client';\nconst mutation = gql`\n  mutation FinalizeOrder($payment_intent_id: String!) {\n    finalizeOrder(data: { payment_intent_id: $payment_intent_id }) {\n      ok\n    }\n  }\n`;\nexport default () => useMutation(mutation);\n","import { gql, useQuery } from '@apollo/client';\nimport { Product } from '@team21/types'\n\nconst query = gql`\n    query UseGetProductById($id: uuid!) {\n        products(where: {id: {_eq: $id}}) {\n          id\n          image\n          name\n          price\n          description\n          quantity\n          category_id\n        }\n    }\n`;\n\ntype UseProductByIdReturn = {\n  products: Product[];\n};\n\nexport default (id?: string) =>\n  useQuery<UseProductByIdReturn>(query, { variables: { id } });\n","import { gql, useMutation } from '@apollo/client';\n\nconst mutation = gql`\n  mutation MyMutation2($cart_id: uuid!, $product_id: uuid!, $quantity: Int!) {\n    insert_cart_item_one(object: {cart_id: $cart_id, product_id: $product_id, quantity: 0}, on_conflict: {constraint: cart_item_product_id_cart_id_key, update_columns: []}) {\n      id\n    }\n    update_cart_item(where: {_and: {cart_id: {_eq: $cart_id}, product_id: {_eq: $product_id}}}, _inc: {quantity: $quantity}) {\n      affected_rows\n    }\n  }\n`;\n\nexport default () => useMutation(mutation);\n","import { Loader, Image, Button } from '@team21/ui-components';\nimport React, { FC, useState} from 'react';\nimport { useLocation } from 'react-router-dom'\nimport useGetProductById from '../graphql/product/useGetProductById';\nimport { useUser } from '@team21/web-shop-front/src/state/state';\nimport useAddItemToCart from '@team21/web-shop-front/src/graphql/cart/useAddItemToCart';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ProductPage: FC<Record<string, never>> = () => {\n    const { state } = useLocation();\n    const { data, loading } = useGetProductById(state.id);\n    const [addItemToCart] = useAddItemToCart();\n    const [quantity, setQuantity] = useState(1);\n    const [isLoader, setIsLoader] = useState(false);\n    const [{ user }] = useUser();\n\n    if(!data && loading) return <Loader />\n\n    const product = data!.products[0]\n\n    function changeQuantity(e:React.FormEvent<HTMLInputElement>) {\n        setQuantity(parseInt(e.currentTarget.value))\n    }\n\n    async function addToCart(product_id: string){\n        setIsLoader(true)\n        await addItemToCart({ variables: { cart_id: user.cart_id, product_id, quantity } })\n        toast.success('Item added to cart!', {\n            position: \"top-right\",\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            progress: undefined,\n        });\n        setIsLoader(false)\n    }\n\n    \n    if(isLoader) return <Loader />\n\n    return <div className=\"flex py-24 px-40 w-10/12 mx-auto\">\n        <div className=\"w-1/3\">\n            <Image wrapperClassName=\"border-solid border-default border-lightGray h-full\" alt={`${product.name}-image`} src={product.image} />\n        </div>\n        <div className=\"flex flex-col w-2/3 px-24\">\n            <h1 className=\"text-whitesmoke text-left text-h1 mb-24\"> {product.name} </h1>\n            <p className=\"text-base text-lightGray text-left mb-16 whitespace-normal break-all \"> {product.description} </p>\n            <div className=\"flex justify-between mb-24  border-b-default border-solid border-gray\">\n                <span className={`${product.quantity > 0 ? 'text-success' : 'text-red'} text-md font-semibold text-left`}> {product.quantity > 0 ? `In Stock: ${product.quantity}` : 'Out of Stock'} </span>\n                {product.price && <span className=\"text-xl text-whitesmoke font-semibold text-left mb-12\"> ${product.price} </span> }\n            </div>\n            <div className=\"flex flex-wrap mb-4 w-full justify-end\">\n                <input\n                    value={quantity}\n                    onChange={changeQuantity}\n                    type=\"number\"\n                    min={1}\n                    defaultValue={0}\n                    className={\"w-16 place-content-center bg-white text-dark border-default border-solid border-lightGray hover:border-gray focus:outline-none focus:border-dark pl-24 py-12\"}\n                />\n                <Button onClick={()=> addToCart(product.id)} disabled={ product.quantity <= 0 ? true : false } size=\"md\" buttonColor=\"primary\" title=\"Add to Cart\" />\n            </div>\n        </div>\n        <ToastContainer\n            position=\"top-right\"\n            autoClose={5000}\n            hideProgressBar={false}\n            newestOnTop={false}\n            closeOnClick\n            rtl={false}\n            pauseOnFocusLoss\n            pauseOnHover\n            theme='dark'\n        />\n    </div>\n};\nexport default ProductPage;\n","import { gql, useMutation } from '@apollo/client';\n\nconst mutation = gql`\n  mutation Registration($fullName: String!, $email: String!, $password: String!) {\n    registration(fullName: $fullName, email: $email, password: $password) {\n      id\n    }\n  }\n`;\n\nexport default () => useMutation(mutation);\n","import { Registration } from '@team21/ui-components';\nimport React, { FC, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router';\nimport useRegistration from '../graphql/useRegistration';\n\nconst RegistrationPage: FC<Record<string, never>> = () => {\n  const [sendRegRequest, { data, called }] = useRegistration();\n  const navigate = useNavigate();\n  const [error, setError] = useState(false);\n  useEffect(() => {\n    if (!called) return;\n    if (data) {\n      if (data.registration.id) {\n        navigate('/login');\n      } else {\n        setError(true);\n      }\n    }\n  }, [data, called]);\n  return (\n    <div className=\"flex flex-col items-center justify-between w-full top-1/4 absolute \">\n      <Registration\n        error={error}\n        onClick={(f, e, p) => sendRegRequest({ variables: { fullName: f, email: e, password: p } })}\n      />\n    </div>\n  );\n};\n\nexport default RegistrationPage;\n","import { gql, useMutation } from '@apollo/client';\n\nconst mutation = gql`\n  mutation MyMutation ($id: uuid!) {\n    delete_cart_item(where: {id: {_eq: $id}}) {\n        affected_rows\n    }\n  }\n`;\n\nexport default () => useMutation(mutation);\n","import { CartItem } from '@team21/types/';\nimport { Button, Image, Loader } from '@team21/ui-components';\nimport useGetCartProducts from '@team21/web-shop-front/src/graphql/cart/useGetCartProducts';\nimport useRemoveItemFromCart from '@team21/web-shop-front/src/graphql/cart/useRemoveItemFromCart';\nimport { useUser } from '@team21/web-shop-front/src/state/state';\nimport React, { FC } from 'react';\nimport { useNavigate } from 'react-router';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst ShoppingCart: FC<Record<string, never>> = () => {\n  const [{ user }] = useUser();\n  const navigate = useNavigate();\n\n  const [removeItemFromCart] = useRemoveItemFromCart();\n  const { data, loading, refetch } = useGetCartProducts(user.cart_id);\n\n  if (!data && loading) return <Loader />;\n\n  const cartItems = data?.cart_item;\n  let orderTotal = 0;\n  cartItems?.map((item: CartItem) => {\n    orderTotal += item.product.price * item.quantity;\n  });\n\n  function checkQuantity() {\n    if(cartItems){\n      for(const item of cartItems){\n        if(item.quantity > item.product.quantity) {\n          toast.error('Item quantity is bigger than remaining quantity!', {\n            position: 'top-right',\n            autoClose: 5000,\n            hideProgressBar: false,\n            closeOnClick: true,\n            pauseOnHover: true,\n            progress: undefined,\n          });\n          return false\n        }\n      }\n    }\n\n    return true\n  }\n\n  function checkout() {\n    const canProceed = checkQuantity()\n    if(canProceed)\n      navigate('/checkout');\n  }\n\n  function categories() {\n    navigate('/categories');\n  }\n\n  async function removeItem(cartItemId: string) {\n    await removeItemFromCart({ variables: { id: cartItemId } });\n    refetch();\n    toast.success('Item removed from cart!', {\n      position: 'top-right',\n      autoClose: 5000,\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      progress: undefined,\n    });\n  }\n\n  return (\n    <div className=\"w-10/12 p-24 mx-auto\">\n      <h1 className=\"mb-32 text-h1 text-whitesmoke\"> Shopping cart </h1>\n      <div className=\"flex w-full\">\n        <div className=\"w-3/5 overflow-auto h-600px\">\n          <ul role=\"list\">\n            {cartItems && cartItems.length > 0 ? (\n              cartItems.map((cartItem: CartItem) => (\n                <li key={cartItem.product.id} className=\"flex mb-16 h-180px\">\n                  <Image\n                    src={cartItem.product.image}\n                    alt={`${cartItem.product.name}-image`}\n                    wrapperClassName=\"flex justify-center items-center w-1/4 border-default border-solid border-lightGray\"\n                  />\n                  <div className=\"flex flex-col flex-1 pb-12 mx-24\">\n                    <div className=\"flex justify-between text-xl font-medium text-whitesmoke\">\n                      <h3>{cartItem.product.name}</h3>\n                      <p className=\"ml-4\">${cartItem.product.price}</p>\n                    </div>\n                    <div className=\"flex items-end justify-between flex-1 text-md\">\n                      <p className=\"text-lightGray\">Qty: {cartItem.quantity} {cartItem.quantity > cartItem.product.quantity && <span className='text-red'>(Item quantity is bigger than remaining quantity)</span>} </p>\n                      <button\n                        onClick={() => removeItem(cartItem.id)}\n                        type=\"button\"\n                        className=\"font-medium text-primary hover:underline\"\n                      >\n                        Remove\n                      </button>\n                    </div>\n                  </div>\n                </li>\n              ))\n            ) : (\n              <div className='block'>\n                <div className='text-whitesmoke text-xl mb-12'> You have no items in your cart... </div>\n                <Button\n                  buttonColor=\"primary\"\n                  size=\"md\"\n                  textColor=\"whitesmoke\"\n                  onClick={categories}\n                  title=\"Continue Shopping\"\n                />\n              </div>\n            )}\n          </ul>\n        </div>\n        <div className=\"w-2/5 ml-16\">\n          <h2 className=\"mb-24 font-medium text-center text-h3 text-whitesmoke\">Order Summary</h2>\n          <div className=\"flex justify-between mb-24 font-medium text-gray-500 text-md\">\n            <p className='text-whitesmoke'>Order Total</p>\n            <p className='text-whitesmoke'>${orderTotal}</p>\n          </div>\n          <Button\n            buttonColor=\"primary\"\n            size=\"md\"\n            textColor=\"whitesmoke\"\n            onClick={checkout}\n            title=\"Checkout\"\n            block\n            disabled={!cartItems!.length}\n          />\n        </div>\n      </div>\n      <ToastContainer\n        position=\"top-right\"\n        autoClose={5000}\n        hideProgressBar={false}\n        newestOnTop={false}\n        closeOnClick\n        rtl={false}\n        pauseOnFocusLoss\n        pauseOnHover\n        theme='dark'\n      />\n    </div>\n  );\n};\nexport default ShoppingCart;\n","import { gql, useQuery } from '@apollo/client';\nimport { Order } from \"@team21/types\"\n\nconst query = gql`\n    query useGetUserOrders($user_id: uuid!, $limit: Int!, $offset: Int!) {\n        orders(where: {user_id: {_eq: $user_id}}, limit: $limit, offset: $offset) {\n            id\n            created_at\n            status\n            total_price\n            address\n            city\n            country\n            phone\n            zip_code\n            orderProducts {\n                product_id,\n                price,\n                quantity,\n                product {\n                    name\n                    image\n                }\n            }\n        }\n        orders_aggregate(where: {user_id: {_eq: $user_id}}) {\n            aggregate {\n              count\n            }\n        }\n    }\n`;\n\ntype useGetUserOrders = {\n    orders: Order[];\n    orders_aggregate: {\n        aggregate: {\n            count: number;\n        };\n    };\n};\n\nexport default (user_id?: string, limit?: number, offset?: number) =>\n  useQuery<useGetUserOrders>(query, { variables: { user_id, limit, offset } });\n","import React, { FC } from 'react';\n\ntype Props = {\n    order: any\n    type?: boolean\n}\n\nconst OrderInformation: FC<Props> = ({order, type}) => {\n\n    function convertDate (date: string) {\n        const d = date.split('T')\n        const dat = d[0].split('-')\n        const time = d[1].split('.')\n        return dat[2]+\"/\"+dat[1]+\"/\"+dat[0]+\" \"+time[0]\n    }\n\n    return <div className=\"w-full mx-auto text-left\">\n        <div className='flex text-whitesmoke text-xl my-8'>\n            <span className='w-1/4'>Order ID</span>\n            <span className='w-1/4'>Order Date</span>\n            <span className='w-1/4'>Order Status</span>\n            <span className='w-1/4'>Order Total</span>\n        </div>\n        <div className='flex text-whitesmoke mb-24'>\n            <span className='w-1/4'>{order.id}</span>\n            <span className='w-1/4'>{convertDate(order.created_at)}</span>\n            <span className='w-1/4'>{order.status}</span>\n            <span className='w-1/4'>${order.total_price}</span>\n        </div>\n        { \n            type && <React.Fragment>\n                <div className='flex text-whitesmoke text-xl my-8'>\n                    <span className='w-1/4'>Country</span>\n                    <span className='w-1/4'>City</span>\n                    <span className='w-1/4'>Address</span>\n                    <span className='w-1/4'>Phone</span>\n                </div>\n                <div className='flex text-whitesmoke mb-24'>\n                    <span className='w-1/4'>{order.country}</span>\n                    <span className='w-1/4'>{order.city} ({order.zip_code})</span>\n                    <span className='w-1/4'>{order.address}</span>\n                    <span className='w-1/4'>{order.phone}</span>\n                </div>\n            </React.Fragment>\n        }\n    </div>\n};\n\nexport default OrderInformation;\n","import React, { FC } from 'react';\nimport { Image } from '@team21/ui-components';\nimport { useNavigate, } from 'react-router-dom'\n\ntype Props = {\n    order: any\n}\n\nconst OrderProduct: FC<Props> = ({order}) => {\n    const navigate = useNavigate();\n\n    function openProduct (id: string) {\n        navigate('/product', { state:{ id: id }});\n    }\n\n    return  <li className=\"flex flex-col justify-start w-1/6 my-16 mr-32\">\n        <Image\n            src={order.product.image}\n            alt={`${order.product.name}-image`}\n            wrapperClassName=\"flex justify-center h-200px items-center border-default border-solid border-lightGray mb-16\"\n        />\n        <div className='flex justify-between items-center mb-16 px-8'>\n            <h3 className='text-xl text-whitesmoke cursor-pointer hover:text-primary' onClick={()=>openProduct(order.product_id)}>{order.product.name}</h3>\n            <p className=\"text-lg text-whitesmoke\">${order.price}</p>\n        </div>\n        <p className=\"text-lightGray px-8\">Quantity: {order.quantity}</p>\n    </li>\n};\n\nexport default OrderProduct;\n","import { Loader, Pagination, Button } from '@team21/ui-components';\nimport React, { FC, useState, useCallback } from 'react';\nimport useGetUserOrders from '../graphql/order/useGetUserOrders';\nimport { useUser } from '@team21/web-shop-front/src/state/state';\nimport { Order } from \"@team21/types\"\nimport OrderInformation from '../components/OrderInformation';\nimport OrderProduct from '../components/OrderProduct';\n\nconst PER_PAGE = 6;\n\nconst Orders: FC<Record<string, never>> = () => {\n    const [{ user }] = useUser();\n    const [currentPage, setCurrentPage] = useState(0);\n    const [viewMore, setViewMore] = useState(false);\n    const [orderView, setOrderView] = useState({\n        id: '',\n        created_at: '',\n        status: '',\n        total_price: '',\n        address: '',\n        city: '',\n        country: '',\n        phone: '',\n        zip_code: '',\n        orderProducts: []\n    });\n    const { data, loading } = useGetUserOrders(user.id, PER_PAGE, currentPage * PER_PAGE);\n\n    const onPageChange = useCallback(\n        (page: number) => {\n            setCurrentPage(page);\n        },\n        [setCurrentPage],\n    );\n\n    function viewOrder (order: any) {\n        setViewMore(true)\n        setOrderView(order)\n    }\n\n    if(!data && loading) return <Loader />;\n\n    const total = data?.orders_aggregate.aggregate.count\n    if(total === 0) return <div className=\"flex w-full absolute top-1/4 items-center justify-center text-xxl text-whitesmoke\">You have not ordered anything yet...</div>\n    \n    return (\n        <React.Fragment>\n            <div className=\"w-10/12 p-24 mx-auto\">\n                {\n                viewMore ? \n                <div className='mx-auto'>\n                    <div className='flex justify-between items-center border-b-default border-solid border-lightGray mb-16'>\n                        <span className='text-whitesmoke text-xxl'>Order Information</span>\n                        <Button\n                            buttonColor=\"primary\"\n                            textColor=\"whitesmoke\"\n                            rounded\n                            onClick={()=>setViewMore(false)}\n                            title=\"Back to Orders\"\n                            customClass='mb-4'\n                        />\n                    </div>\n                    <OrderInformation order={orderView} type />\n                    <div>\n                        <h1 className='text-whitesmoke text-xxl border-b-default border-solid border-lightGray mb-16'>Ordered Items</h1>\n                        <ul className='flex' role=\"list\"> \n                        { \n                            orderView.orderProducts.map((item:any) => (\n                                <OrderProduct key={item.id} order={item} />\n                            ))\n                        }               \n                        </ul>\n                    </div>\n                </div> : \n                <React.Fragment>\n                    <h1 className=\"text-whitesmoke text-h1 text-left mb-32\">Orders</h1>\n                    <div className=\"flex justify-items-start items-center flex-wrap\">\n                        {data?.orders?.map((order: Order)=>(\n                            <div key={order.id} className=\"w-full mx-auto text-left\">\n                                <OrderInformation order={order} />\n                                <div className=\"flex justify-end my-8 border-t-default border-gray\">\n                                    <Button\n                                        buttonColor=\"primary\"\n                                        textColor=\"whitesmoke\"\n                                        rounded\n                                        onClick={()=>viewOrder(order)}\n                                        title=\"View Order\"\n                                        customClass='mt-16'\n                                    />\n                                </div>\n                        </div>\n                        ))}\n                    </div>\n                    { total && (total > PER_PAGE) && <div className=\"w-10/12 p-24 mx-auto\">\n                        <Pagination\n                            currentPage={currentPage}\n                            total={total ?? 0}\n                            displayPerPage={PER_PAGE}\n                            onPageChange={onPageChange}\n                        />\n                    </div>}\n                    </React.Fragment>\n                }\n            </div>\n      </React.Fragment>\n    );\n};\n\nexport default Orders;\n","import React, { FC, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\n\ntype Props = {\n    children: any;\n    loggedIn: string | null;\n    path: string;\n}\n\nconst PrivateRoute: FC<Props> = ({ children, loggedIn, path }) => {\n    return loggedIn ? children  : <Navigate to={path}/> \n}\n\nexport default PrivateRoute;","import { ApolloProvider } from '@apollo/client';\nimport React, { FC, useEffect, useState } from 'react';\nimport { BrowserRouter, Route, Routes } from 'react-router-dom';\nimport createApolloClient from './graphql/clients';\nimport Navigation from './Navigation';\nimport Categories from './pages/Categories';\nimport Category from './pages/Category';\nimport CheckoutPage from './pages/CheckoutPage';\nimport Home from './pages/Home';\nimport LoginPage from './pages/LoginPage';\nimport PaymentMessage, { PaymenntMessageType } from './pages/PaymentMessage';\nimport ProductPage from './pages/ProductPage';\nimport RegistrationPage from './pages/RegistrationPage';\nimport ShoppingCart from './pages/ShoppingCart';\nimport Orders from './pages/Orders'\nimport { useUser } from './state/state';\nimport PrivateRoute from './components/PrivateRoute';\n\nconst AppRouter: FC<Record<string, never>> = () => {\n  const [{ token }] = useUser();\n  const [apolloClient, setApolloClient] = useState(createApolloClient());\n  const [loggedIn, setLoggedIn] = useState(token)\n\n  useEffect(() => {\n    setApolloClient(createApolloClient(token));\n    setLoggedIn(token)\n  }, [token]);\n\n  return (\n    <ApolloProvider client={apolloClient}>\n      <BrowserRouter>\n        <Navigation />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/login\" element={<LoginPage />} />\n          <Route path=\"/register\" element={<RegistrationPage />} />\n          <Route path=\"/categories\" element={<Categories />} />\n          <Route path=\"/category\" element={<Category />} />\n          <Route path=\"/product\" element={<PrivateRoute loggedIn={loggedIn} path=\"/login\"> <ProductPage /> </PrivateRoute> } />\n          <Route path=\"/checkout\" element={<PrivateRoute loggedIn={loggedIn} path=\"/login\"> <CheckoutPage /> </PrivateRoute>} />\n          <Route path=\"/cart\" element={<PrivateRoute loggedIn={loggedIn} path=\"/login\"> <ShoppingCart /> </PrivateRoute>} />\n          <Route path=\"/orders\" element={<PrivateRoute loggedIn={loggedIn} path=\"/login\"> <Orders /> </PrivateRoute>} />\n          <Route\n            path=\"/success\"\n            element={\n              <PaymentMessage title=\"Payment successfull\" type={PaymenntMessageType.SUCCESS} />\n            }\n          />\n          <Route\n            path=\"/fail\"\n            element={<PaymentMessage title=\"Payment failed\" type={PaymenntMessageType.FAIL} />}\n          />\n          <Route\n            path=\"/error\"\n            element={<PaymentMessage title=\"Payment error\" type={PaymenntMessageType.ERROR} />}\n          />\n        </Routes>\n      </BrowserRouter>\n    </ApolloProvider>\n  );\n};\n\nexport default AppRouter;\n","\nimport React from 'react';\nimport AppRouter from './AppRouter';\nimport { UserProvider } from './state/state';\n\nfunction App() {\n  return (\n    <UserProvider>\n      <AppRouter />\n    </UserProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}